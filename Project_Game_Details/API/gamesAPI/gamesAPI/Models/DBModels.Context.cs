//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gamesAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBModel : DbContext
    {
        public DBModel()
            : base("name=DBModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<gameDetail> gameDetails { get; set; }
    
        public virtual int spAddGame(string game_Name, string game_description, Nullable<System.DateTime> game_releaseDate, Nullable<decimal> game_rating, string game_feedback)
        {
            var game_NameParameter = game_Name != null ?
                new ObjectParameter("game_Name", game_Name) :
                new ObjectParameter("game_Name", typeof(string));
    
            var game_descriptionParameter = game_description != null ?
                new ObjectParameter("game_description", game_description) :
                new ObjectParameter("game_description", typeof(string));
    
            var game_releaseDateParameter = game_releaseDate.HasValue ?
                new ObjectParameter("game_releaseDate", game_releaseDate) :
                new ObjectParameter("game_releaseDate", typeof(System.DateTime));
    
            var game_ratingParameter = game_rating.HasValue ?
                new ObjectParameter("game_rating", game_rating) :
                new ObjectParameter("game_rating", typeof(decimal));
    
            var game_feedbackParameter = game_feedback != null ?
                new ObjectParameter("game_feedback", game_feedback) :
                new ObjectParameter("game_feedback", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddGame", game_NameParameter, game_descriptionParameter, game_releaseDateParameter, game_ratingParameter, game_feedbackParameter);
        }
    
        public virtual int spDeleteGame(Nullable<decimal> game_Id)
        {
            var game_IdParameter = game_Id.HasValue ?
                new ObjectParameter("game_Id", game_Id) :
                new ObjectParameter("game_Id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteGame", game_IdParameter);
        }
    
        public virtual ObjectResult<spGetAllGames_Result> spGetAllGames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllGames_Result>("spGetAllGames");
        }
    
        public virtual int spUpdateStudent(Nullable<decimal> game_Id, string game_Name, string game_description, Nullable<System.DateTime> game_releaseDate, Nullable<decimal> game_rating, string game_feedback)
        {
            var game_IdParameter = game_Id.HasValue ?
                new ObjectParameter("game_Id", game_Id) :
                new ObjectParameter("game_Id", typeof(decimal));
    
            var game_NameParameter = game_Name != null ?
                new ObjectParameter("game_Name", game_Name) :
                new ObjectParameter("game_Name", typeof(string));
    
            var game_descriptionParameter = game_description != null ?
                new ObjectParameter("game_description", game_description) :
                new ObjectParameter("game_description", typeof(string));
    
            var game_releaseDateParameter = game_releaseDate.HasValue ?
                new ObjectParameter("game_releaseDate", game_releaseDate) :
                new ObjectParameter("game_releaseDate", typeof(System.DateTime));
    
            var game_ratingParameter = game_rating.HasValue ?
                new ObjectParameter("game_rating", game_rating) :
                new ObjectParameter("game_rating", typeof(decimal));
    
            var game_feedbackParameter = game_feedback != null ?
                new ObjectParameter("game_feedback", game_feedback) :
                new ObjectParameter("game_feedback", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudent", game_IdParameter, game_NameParameter, game_descriptionParameter, game_releaseDateParameter, game_ratingParameter, game_feedbackParameter);
        }
    }
}
